{
	"cppcode" : {
		"prefix": "cppcode",
		"body" : [
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"",
			"#define ll long long int",
			"#define pb push_back",
			"#define mp make_pair",
			"#define mt make_tuple",
			"#define pp pop_back",
			"#define all(x) x.begin(), x.end()",
			"#define rall(x) x.rbegin(), x.rend()",
			"#define cont(it,x) for (auto it=x.begin(); it!=x.end(); it++){cout << *it << ' ';} cout << '\\n';",
			"#define contp(it,x) for (auto it=x.begin(); it!=x.end(); it++){cout << it->first << ' ' << it->second << '\\n';}",
			"#define printvvec(x) for(int _=0;_<x.size();_++){for(int __=0;__<x[_].size(); __++){cout<<x[_][__]<<' ';}cout<<'\\n';}",
			"#define printp(x) cout<<x.first<<' '<< x.second<<'\\n';",
			"#define fo(i,start,end) int i=start;i<end;i++",
			"#define foi(i,start,end) int i=start;i<=end;i++",
			"#define fot(it, x) auto it=x.begin();it!=x.end();it++",
			"#define printadj(n,x) for (int i=0; i<n; i++) {cout<<i<<\": \";for(int j=0;j<x[i].size();j++){cout<<adj[i][j]<<' ';}cout<<'\\n';}",
			"//#define int long long int",
			"#define fo(i,start,end) int i=start;i<end;i++",
			"#define foi(i,start,end) int i=start;i<=end;i++",
			"#define fot(it, x) auto it=x.begin();it!=x.end();it++",
			"#define invec(v, n) for(int i=0;i<v.size();i++)cin>>v[i];",
			"",
			"// min-heap",
			"class comp{",
			"public:",
			"\tbool operator() (int& a, int& b) {",
			"\t\treturn a > b;",
			"\t}",
			"};",
			"",
			"// sort pair",
			"bool comp1(pair<int,int> a, pair<int,int> b) {",
			"\treturn(a.second < b.second);",
			"}",
			"",
			"// string to int",
			"int string_to_int(string s) {",
			"\tstringstream a(s);",
			"\tint x;",
			"\ta >> x;",
			"\treturn x;",
			"}",
			"",
			"void best() {",
			"\tint __ = 1;",
			"\tcin >> __;",
			"\twhile(__--) {",
			"\t\t$0",
			"\t}",
			"}",
			"",
			"int main() {",
			"\tios_base::sync_with_stdio(0);",
			"\tcin.tie(0);",
			"\tcout.tie(0);",
			"\t",
			"\t#ifndef ONLINE_JUDGE",
			"\t\t//freopen(\"in\", \"r\", stdin);",
			"\t\t//freopen(\"out\", \"w\", stdout);",
			"\t#endif",
			"\t",
			"\tbest();",
			"\t",
			"\treturn 0;",
			"}",
			""
		],
		"description": "Skeleton by Ajitesh"
	}
}
